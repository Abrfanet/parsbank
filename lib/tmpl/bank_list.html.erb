
<%
# Global Vars
@supported_psp=Parsbank.supported_psp
%>
<style>
  #parsbank-wrapper, #parsbank-wrapper *:not(svg *) {
    all: revert;
  }

  /* Direction handling based on language and body direction */
  html[lang="fa-IR"] #parsbank-wrapper,
  body[dir="rtl"] #parsbank-wrapper {
    direction: rtl;
  }

  html[lang="en"] #parsbank-wrapper,
  body[dir="ltr"] #parsbank-wrapper {
    direction: ltr;
  }

  /* Flex container settings */
  #parsbank-wrapper .flex-container {
    display: flex;
    justify-content: center;
    flex-wrap: wrap;
  }

  /* Label styling */
  #parsbank-wrapper .flex-container label {
    margin: 15px;
    display: block;
  }

  #parsbank-wrapper .flex-container label span {
    display: block;
    text-align: center;
    margin: auto;
  }

  /* Styled radio button container */
  #parsbank-wrapper .styled-radio {
    position: relative;
    object-fit: contain;
    width: 100px;
    height: 100px;
    padding: 15px;
    display: inline-block;
    border-radius: 50%;
    text-align: center;
  }

  #parsbank-wrapper .styled-radio svg {
    position: absolute;
    height: 100%;
    width: 75%;
    top: 0;
    margin: auto;
    display: block;
  }

  /* Color class styling */
  #parsbank-wrapper .red { background: tomato; }
  #parsbank-wrapper .green { background: limegreen; }
  #parsbank-wrapper .blue { background: cornflowerblue; }

  /* Invisible radio button styling */
  #parsbank-wrapper .invisible-radio {
    position: absolute;
    height: 1px;
    width: 1px;
    overflow: hidden;
    clip: rect(1px 1px 1px 1px); /* Ensure it works across browsers */
  }

  /* After styling when invisible radio is checked */
  #parsbank-wrapper .invisible-radio + label .styled-radio::after {
    content: attr(data-text);
    font-size: 1.5em;
    display: inline-block;
    padding: 20px;
    width: 150px;
    text-align: center;
    position: absolute;
    bottom: -60px;
  }

  /* Styling when radio is checked */
  #parsbank-wrapper .invisible-radio:checked + label .styled-radio {
    background-color: #FFD700;
  }

  /* Checkmark display when selected */
  #parsbank-wrapper .invisible-radio:checked + label span:before {
    content: '\2713';
    display: inline-block;
    color: green;
    padding-left: 5px;
    scale: 1.7;
  }

  /* Hover effect on non-checked radios */
  #parsbank-wrapper .invisible-radio:not(:checked) + label {
    cursor: pointer;
  }

  #parsbank-wrapper .invisible-radio:not(:checked) + label:hover .styled-radio {
    opacity: 0.7;
  }

  /* Focus effect on invisible radio */
  #parsbank-wrapper .invisible-radio:focus + label .styled-radio {
    transform: scale(1, 1);
    animation: pulsate 1s alternate ease-in-out infinite;
  }

  /* Animation for pulsating effect */
  @keyframes pulsate {
    from {
      transform: scale(1);
      box-shadow: none;
    }
    to {
      transform: scale(1.05);
      box-shadow: 1px 4px 8px rgba(0, 0, 0, 0.2);
    }
  }

  #parsbank-wrapper #parsbank-blockquote{
    display:block !important;
    width:100%;
  }


  #parsbank-wrapper select{
    display: none;
  width: 100%;
  padding: .375rem 2.25rem .375rem .75rem;
  -moz-padding-start: calc(0.75rem - 3px);
  font-size: 1rem;
  font-weight: 400;
  line-height: 1.5;
  color: #212529;
  background-color: #fff;
  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3e%3cpath fill='none' stroke='%23343a40' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M2 5l6 6 6-6'/%3e%3c/svg%3e");
  background-repeat: no-repeat;
  background-position:  <%= ( I18n.locale.to_s == 'fa') ? 'right' : 'left' %> .75rem center;
  background-size: 16px 12px;
  border: 1px solid #ced4da;
  border-radius: .25rem;
  transition: border-color .15s ease-in-out,box-shadow .15s ease-in-out;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
    transition:1s;

  }
  #parsbank-radio-nobitex:checked ~ .coin-network,#parsbank-radio-binance:checked ~ .coin-network{
    display:block !important;
    opacity: 1;
    transition:1s;
  }
</style>

<section id="parsbank-wrapper">
  <fieldset class="flex-container">
    <legend><%= args.fetch(:legend_message, 'Choose Your Payment Method...') %></legend>
    <div class="flex-container">
      <% Parsbank.available_gateways_list.each_key do |key| %>
        <div id="<%= key %>-wrapper">
          <input type="radio" name="parsbank-selectors" id="parsbank-radio-<%= key %>" value='<%= key %>' class="invisible-radio">
          <label for="parsbank-radio-<%= key %>">
            <div class="styled-radio blue">
              <%= Object.const_get("Parsbank::#{key.capitalize}").logo if defined?(Object.const_get("Parsbank::#{key.capitalize}").logo) %>
            </div>
            <span><%= I18n.t "bank_names.#{key}" %></span>
          </label>

          <% if ['nobitex','binance'].include? key  %>
            <select name='coin-network' class='coin-network <%= key %>-coin-selector'>
                <% Parsbank.supported_psp[key]['support_coins'].each do |coin| %>
                    <option value="<%= coin %>"><%= coin.upcase %></option>
                <% end %>
            </select>
          <% end %>
        </div>
      <% end %>
    </div>

<blockquote id='parsbank-blockquote' cite="https://github.com/Abrfanet/parsbank"></blockquote>

  </fieldset>
</section>

<script type="text/javascript">
  document.addEventListener("DOMContentLoaded", function() {
  window.I18n = window.I18n || {};
  window.I18n['<%= I18n.locale.to_s %>'] = <%= I18n.t('.').to_json.html_safe %>;

   const PSP = <%= @supported_psp.to_json %>;
   
   function loadConditions(event) {
        document.getElementById('parsbank-blockquote').textContent = I18n.<%= I18n.locale.to_s %>.bank_list[event.target.value];
    }

    document.querySelectorAll("input[name='parsbank-selectors']").forEach((input) => {
        input.addEventListener('change', loadConditions);
    });

    



  });
</script>
